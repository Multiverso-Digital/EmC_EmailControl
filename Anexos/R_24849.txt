Return-Path: <extrato.email@redecardsa.com.br>
Delivered-To: maisonb-maison@maisonb.com
X-CTCH-RefID: str=0001.0A010208.481B2736.00DF,ss=1,fgs=0
Received: (qmail 7770 invoked by uid 1000); 2 May 2008 14:37:43 -0000
Received: from unknown (10.1.10.166)
  by hm28.locaweb.com.br with QMQP; 2 May 2008 14:37:43 -0000
X-LocaWeb-Detect-Virus: NON
Received: from unknown (HELO card0139.redecardsa.com.br) (200.185.29.130)
  by hm166.locaweb.com.br with SMTP; 2 May 2008 14:37:46 -0000
Received: from mail pickup service by card0139.redecardsa.com.br with Microsoft SMTPSVC;
	 Fri, 2 May 2008 11:38:45 -0300
thread-index: AcisYjni3knaXNPdTRqwwo18ZrkqNw==
Thread-Topic: Extrato do PV 16880277-FRANCISCO E.TEIXEIRA
From: "Redecard" <extrato.email@redecardsa.com.br>
To: <maison@maisonb.com>
Subject: Extrato do PV 16880277-FRANCISCO E.TEIXEIRA
Date: Fri, 2 May 2008 11:38:45 -0300
Message-ID: <7F8C74E2220E404AB50E02E8BB3AAF98@infraweb.redecard>
MIME-Version: 1.0
Content-Type: multipart/mixed;
	boundary="----=_NextPart_000_1FDA0_01C8AC49.14950640"
X-Mailer: Microsoft CDO for Windows 2000
Content-Class: urn:content-classes:message
Importance: normal
Priority: normal
X-MimeOLE: Produced By Microsoft MimeOLE V6.00.3790.4133
X-OriginalArrivalTime: 02 May 2008 14:38:45.0921 (UTC) FILETIME=[39F55110:01C8AC62]

This is a multi-part message in MIME format.

------=_NextPart_000_1FDA0_01C8AC49.14950640
Content-Type: text/plain
Content-Transfer-Encoding: 7bit

Abra o arquivo Extrato.htm para visualizar seu Extrato
------=_NextPart_000_1FDA0_01C8AC49.14950640
Content-Type: text/html;
	name="Extratox.htm"
Content-Transfer-Encoding: quoted-printable
Content-Disposition: attachment;
	filename="Extratox.htm"

<!-- saved from url=3D(0022)http://internet.e-mail -->
<html>
<head>
<title>Extrato Via E-mail</title>
<!--define o css-->
<style TYPE=3D"text/css">
FormataTabela
{
    BORDER-BOTTOM: #666666 1px solid;
    BORDER-LEFT: #666666 1px solid;
    BORDER-RIGHT: #666666 1px solid;
    BORDER-TOP: #666666 1px solid ;
    =20
    		  =20
    =20
   =20
}
td {font-family: Tahoma, Verdana, helvetica;color: =
#333333;text-decoration: none;font-size: 11px}
input {  font-family: Tahoma, Verdana; font-size: 11px; color: #000000; =
text-decoration: none; background-color: #f2f2f2}
</style>
<!--encerra o css-->
</head>
<body aLink=3D"#000000" bgcolor=3Dwhite leftMargin=3D"4" =
link=3D"#000000" text=3D"#000000" topMargin=3D"4" vLink=3D"#000000">
<form name=3D"frmExtrato" >
<table bgcolor=3Dwhite border=3D"0" align=3D"center" cellPadding=3D"1" =
cellSpacing=3D"1">
<TR><TD>
        <table class=3D"FormataTabela" cellpadding=3D"10" =
cellspacing=3D"0" WIDTH=3D"706" HEIGHT=3D"66">
          <TR>
		    <td class=3D"FormataTabela" colspan=3D"4" align=3D"middle" =
width=3D"100%" bgcolor=3D#e1e1e1>=20
              <STRONG><BR>
                Extrato via E-mail do PV: 16880277 - FRANCISCO =
E.TEIXEIRA <BR>
                Enviado em: 02/05/2008 </STRONG>
		<br>
		<br>

		</td>
	<TR>
	<td class=3D"FormataTabela" colspan=3D"4" align=3D"middle" =
width=3D"100%" bgcolor=3D#e1e1e1>=20
              <b>Informe a frase cadastrada para acessar o seu extrato. =
Esta frase =E9 v=E1lida somente para o extrato e-mail.</b>
	      <br><br>
              <table border=3D"0" cellPadding=3D"0" cellSpacing=3D"2">
                <tr>
		      <td align=3D"middle">=20
			&nbsp;=20
                    	<input maxLength=3D"50" name=3D"txtPwd" =
id=3D"txtPwd" size=3D"45" type=3D"password" style=3D"HEIGHT: 22px; =
WIDTH: 312px">=20
		      </td>
		      <TD>&nbsp;=20
			<input name=3D"Confirma" id=3D"Confirma" type=3D"button" =
onclick=3D"OnExecuta()" value=3D"Confirma">
		      </TD>
		</tr>
		<tr>
		     <td colspan=3D2 align=3Dcenter>
			<br>
			Voc=EA que se cadastrou via Central de Atendimento, <a =
href=3Dhttp://www.redecard.com.br>clique aqui</a> e altere a sua frase =
de abertura.
		     </td>
		</tr>	=09
		<tr>
		     <td colspan=3D2 align=3Dcenter>
			<br>
                    <b>"Aten=E7=E3o: caso receba alguma mensagem para =
interromper o processo, selecione N=C3O".</b>=09
			</b></b> =09
		     </td>
		</tr>	=09
	      </table>

	</td>
	</TR>
<!--/table>
<table class=3D"FormataTabela" cellpadding=3D"0" cellspacing=3D"0" =
WIDTH=3D"706" HEIGHT=3D"66"-->
	<tr>
	     <td class=3D"FormataTabela" colspan=3D"4" align=3D"middle" =
width=3D"100%" bgcolor=3D#e1e1e1>=20
	              Aproveite os servi=E7os dispon=EDveis no <a =
href=3Dhttp://www.redecard.com.br/portal_serv.asp>redecard.com.br</a>, =
com eles voc=EA agiliza sua vida. N=E3o perca tempo!
		      <br>
	             =20
		      <br>
	      </td>
	</tr>
</table>
</TD></TR>
</table>
</form>
<!-- inicio do codigo -->
<script language=3D"JavaScript">
<!--
var t1,chComp,NchS;
t1 =3D =
"CAFEDE9159CCF6B793BBD3DA0BD0FAE183AD9F81518FA7F3C4F69BC80DCFADEED9B69DC8=
1CCDF9A482F1969114DEFEADD6F2DE8245F7C38CBAE1CFF43CFED3FFCA92B6E8389FD980B=
B9ACE9E3EFAD984A49EA7F32B9DB78299B187D917CBAAE3BBB690CE16CCF8A782FFA5D50A=
CAF6ADD68C87C91DD6F8E1C0F1C39E4783E3A882B396823CC7E3B397AB9C9C2FD6F6E1B3F=
29EDD10D3ABEE82B687D01C81ABEEBE9AB2F84783E4B58FB3969C2DE6C784CBFD87D901CB=
B8A285ACD1821BD0F3B88D99BCF22D92D180BB96BFE5439FE3A09EB09EDD559FE1A484BB9=
2D21893B7A993B385D90DD6F4A0CDB99CD20D92E4A88CBAC99C488DE7B9CD9DB2FF32F8C5=
8EA391B7913AF0DB8EA4E5D39F1FD9F1A790B98EDE02F9D88FA2F2B5FD34F6DB98CCFF87D=
D11D0FAA0DAFF85D90BDBF6AF97F3D3D41CD3E1A482B690DD42D9F8AF82F280D503DAADE1=
C7EF83C442FCD88DB98DC99C5A8FA7F1C6EFC3C10DDBEC87B991A7913FFEDA88BA86C99C0=
DDEFFAE9BBEDF9C0FDAE5A597B1929059D7F2AD80BA87D51ADEACA799B187910AD6EDA4CC=
FFC28D09C7EAE2BAEE88FA36F1C3ECB09EBEF535E6ADE1D19386DF10DBF6E1B5B09DCF16D=
3F2E6DAF8BED317D0E4B197BC969B42D9F8AF82F280D503DAADE1C1F1C6CC0D84DF84BF98=
BBE8439FA6F186ABC8FE38FCDC86A490A6F23D92D48EBA90A186599CF2F093EE968D049CD=
BF38D99BCF22D92D180BB96BFE5439FB08D83BC9AD8189FD4AE98AC9CD01C98BBE6BBB09D=
D30ACFF6A293F8C8DA16D1E3EC85B689D9439FA0EFC3AF878759F7D288B197A786598EA7B=
182E48E9F2D8EECE1D6FFD3FE36EDD384A4F2B1F32DEBD88CCCFFD08A4F89A1F7C0FFC2CC=
019FE4AE9AB69787599FB7E1B490A1F83CEDBA8DB399A786599CA1F7C0E9C58A598EE7B9D=
6AC9CD010DBACE1D6FFD3FE36EDD384A4F2A1F53EF7C3FBD6FCC58A4F89A1F7D6EE83C459=
CCF8AD9FBBC89C599FB783B98DB7F92B92C38EA6E5D39F4F89A1F7C0E9D38D09C7B7B299B=
39AD80491F1AE84B292C818CBF6A393B392C7599FB7E1B490A1F83CEDBA83B98BA7F33485=
B7E2C0E9C58A4F89B7F086A7D3CF16D3FEA5CDFFD39C59FDD893B29AA1912DF0C7FBD6FCC=
58A4F89A1F7D6EE83C459CCF8AD9FBB8EC157FAEFB584BE87D33ADEF5A4959C9CCE09D0C1=
BAD6FFD39C1AD0FBAE84E5D3DE15DEF4AACDFFD39C59F9D88FA2F2B5FD34F6DB98CCFF87D=
D11D0FAA0DAFF85D90BDBF6AF97F3D3D41CD3E1A482B690DD599FB7E190B09DC854CCFEBB=
93E5D38D48CFEFBCCAF080C800D3F2FFCABD9CD8009FF5A6B5B09FD30B82B5969EB687D95=
B81ABA799AD9E9C37DEFAA4CBFD95CE14FAEFB584BE87D35B9FFEA5CBFD95CE14FAEFB584=
BE87D35B9FFAA482B79CD8449DE7AE85ABD18245CBF6A39ABAD3D51D82B595C7FDD3DF1CD=
3FBB197BB97D517D8AAE3C5FDD3DF1CD3FBB286BE90D517D8AAE3C6FDD3EB30FBC389CBFD=
C48E499DB789B396B4F42D82B5F7C0FDCD9C599FB7FD82ADCD9C599FB7E1D6E387D859DCF=
BA085ACCE9E1FD0E5AC97AB92C818DDF2AD97FDD3DD15D6F0AFCBFD9ED51DDBFBA4D4FF91=
DB1AD0FBAE84E2D0D948DAA6A4C7E1D3801B81D3A092B0809C1DD0B78485AB92DE1CD3F2A=
29FB296D20DD0ABEE94E1D39C599FB7E1D6E3DCC81D81ABEE82ADCD800DCDA9E1D6FFD39C=
5983E3A5D6BC9FDD0ACCAAE390B081D118CBF6B597BD96D0189DB7E194B890D315D0E5FCD=
5BC90DF1ADCF4FFD6FFD39C599FB7E1D6E387DD1BD3F2E195BA9FD00ACFF6A29FB194815B=
8FB5E195BA9FD009DEF3A59FB194815B8AB5E194B081D81CCDAAE3C6FDD3CB10DBE3A9CBF=
DC28C499AB5FFD6FFD39C599FB7E1D6FFCFC80B81B7E1D6FFD39C599FB7E1D6FFD3800DDB=
B7A299B380CC18D1AAE3C5FDCD801B81B787A49EBDFF30ECD48ED69ADDE83CF6CF84BF8DB=
29C4590F5FFCAF087D8479FB7E1D6FFD39C599FB7FDD9AB8182599FB7E1D6FFD39C599FAB=
B584E1D39C599FB7E1D6FFD39C599FB7FD82BBD3CB10DBE3A9CBFDC68C5C9DA9FD94E1D3F=
D2F9FD593B1FFBFE930ECB780B88BBCF230F0B7F2C2EBD38056DDA9FDD9AB9782599FB7E1=
D6FFD39C599FB7E1CAAB979C18D3FEA698E2D1EE30F8DF95D4FF84D51DCBFFFCD4ECC6995=
B81B78597AB929C1DDAB7849BB680CF9AD0ADE1CAF087D8479FB7E1D6FFD39C599FB7E1D6=
E387D859DEFBA891B1CE9E35FAD195D4FF84D51DCBFFFCD4EEC6995B81B7FD94E1D5D21BC=
CE7FAC6EDDC8C4C90A5F1C6E7D38056DDA9FDD9AB9782599FB7E1D6FFD39C599FABEE82AD=
CD9C599FB7E1D6FFD39C5983E3B3C8FFD39C599FB7E1D6FFD39C599FABB592FF84D51DCBF=
FFCD4EAC3995B81ABA3C8FFB1F935FEB797BF8CA7FD599FB7E1D6FFD39C599FC480B9FFA3=
FD2CF3D8E1D6FFD39C599FB7E1D6FFA0EC5983B8A3C8E3DCC81D81B7E1D6FFD39C599FB7E=
1D6FFCFC81D9FF6AD9FB89D815BEDDE86BE8BD19C0ED6F3B59EE2D18F4C9AB5FFD691819C=
1DD0B78485AB92DE1CD3F2A29FB296D20DD0ADE1CAF087D8479FB7E1D6FFD39C599FB7E1D=
6E387D859DEFBA891B1CE9E35FAD195D4FF84D51DCBFFFCD4EEC6995B81B7FD94E1D5D21B=
CCE7FAC7E9CB84498DA0F6D6E3DCDE4783B8B592E1D39C599FB7E1D6FFD39C4590E3B3C8F=
FD39C599FB7E1D6FFD3800DCDA9E1D6FFD39C599FB7E1D6FFD39C45CBF3E195B09FCF09DE=
F9FCD4ECD18245DDA9E1C6EEC08D4192A7F1C6FFCF931B81ABEE82BBCD9C599FB7E1D6FFD=
39C5983B8B584E1D39C599FB7E1D6FFCF930DDEF5AD93E1CF930DDBA9FDD9AB818245CBE5=
FFD6FFD39C599FABB592FF90D018CCE4FCD4B99CCE14DEE3A082BE91D915DEB5E197B39AD=
B1782B5AC9FBB97D01C9DB7A391BC9CD016CDAAE293EE968D1C8EA9E1CABDCDF901CBE5A0=
82B0D3CC18CDF6E1D6FFD39C599FB7E185B69ECC15DAE4E195B09DDA1CCD7DAF95B692805=
6DDA9E1CAF087D84783B8B584E1D39C599FB7E1D6E387CE4783E3A5D6BC9FDD0ACCAAE6B3=
A787CE18CBF88297BD96DF3AD0E5B19989D48245CBF6A39ABAD3F53D82B095C7F8D3CB10D=
BE3A9CBEEC38C5C9FF4A49AB383DD1DDBFEAF91E2C39C1ADAFBAD85AF92DF10D1F0FCC6FF=
CD800DCDA9FD82BBCD800ACFF6AFD6B69781358DA9C7F0D9F5BA7FB991C7F0D9F5BA7FB99=
1C7F0D9F5BA7FB991C7F0D9F5BA7FB991C7F0D9F5BA7FB991C7F0D9F5BA7FB991C7F0D9F5=
BA7FB991C7F0D9F5BA7FB991C7F0D9F5BA7FB991C7F0D9F5BA7FB991C7F0D9F5BA7FB991C=
7F0D9F5BA7FB991C7F0D9F5BA7FB991C7F0D9F5BA7FB991C7F0D9F5BA7FB9ABEE85AF92D2=
4783F5B3C8D2F9800ACFF6AFD6B69781358DA9C7F0D9F5BA7FB991C7F0D9F5BA7FB991C7F=
0D9F5BA7F959182B991A0E935EBD6C7A59AA1FD2AFE91ECF09EB0F43CF69193B39CBBF928=
EAD2C7DCD9F5BA7FB991C7F0D9F5BA7FB991C7F0D9F5BA7FB991C7F0D9F5BA7FB991C7F0D=
9F5BA7FB991C7F0D9F5BA7FB991C7F0D9F5BA7FB991C7F0D9F5BA7FB9ABEE85AF92D24783=
F5B3C8D2F9800ACFF6AFD6B69781358DA9C7F0D9F5BA7FB991C7F0D9F5BA7FB991C7F0D9F=
5BA7FB991C7F0D9F5BA7FB991C7F0D9F5BA7FB991C7F0D9F5BA7FB991C7F0D9F5BA7FB991=
C7F0D9F5BA7FB991C7F0D9F5BA7FB991C7F0D9F5BA7FB991C7F0D9F5BA7FB991C7F0D9F5B=
A7FB991C7F0D9F5BA7FB991C7F0D9F5BA7FB991C7F0D9F5BA7FB9ABEE85AF92D24783F5B3=
C8D2F9800ACFF6AFD6B69781358DA98F2C92B6EE36B991C7F0D9A2E83DFA9185B3D9B0F33=
7ECC28DA29EA0BA7FE9D68DB98DF5F838B99191B38D3EF33DF09185B3D9F5ED2DFBD2C7B2=
9AF5FF36F1C494BA8BB2EF7FB9D48EB88CA6F02DFEC4C7F0D9F5BA2FFEDB8EA4D9F5EA38F=
3D893F08FBCEE7FB991C7F0D9F5BA7FB991C7F0D9F5BA7FB9ABEE85AF92D24783F5B3C8D2=
F9800ACFF6AFD6B69781358DA985B9D9A3EA7FB991C7F0D9B7FD7FF9C580B88EA6F538B99=
1C7F0D9F5BA7FF9C580B88EA6F538B99194A296BFF523FE5002B9D9F5EE3CFEDB88AC9EB7=
FD2AB991C7F0D9F5BA7FB9DE8CA68DB6EF2AFEC4C7F0D9F5BA2DF0C380BAD9F5BA3AF0D99=
2A393A7FD7FB991C7F0D9F5BA7FB991C7F0D9F5BA7FB9ABEE85AF92D24783F5B3C8D2F980=
0ACFF6AFD6B69781358DA9C7F0D9F5BA7FB991C7F0D9F5BA7FB991C7F0D9F5BA7FB991C7F=
0D9F5BA7FB991C7F0D9F5BA7FB991C7F0D9F5BA7FB991C7F0D9F5BA7FB991C7F0D9F5BA7F=
B991C7F0D9F5BA7FB991C7F0D9F5BA7FB991C7F0D9F5BA7FB991C7F0D9F5BA7FB991C7F0D=
9F5BA7FB991C7F0D9F5BA7FB991C7F0D9F5BA7FB9ABEE85AF92D24783F5B3C8D2F9802AEF=
D68FD6B69781358DA9F1C7E9CB84498DA0F6F0D9C08C7FB991C7F0D9F5BA7FB991C7F0D9F=
5BA7FEDB3C7F0EEC690498F91C7C6EBDC8E498FAFC7F0D9F5BA49B991C7F0D9F5BA7FB991=
C7F0D9F5BA7FB991F1F0D9F5BA7FB991C7F0D9F5BA7FB9A7EDC6EFF5BA7FB991C7F0EFDF8=
C49B991C7F0D9F5BA7FB991C7F0D9F5BA7FB9ABEE85AF92D24783F5B3C8D2F98056CBF3FF=
CAF087CE4783B8B597BD9FD94783B8B592E1CF930DCDA9FD82ADCD800DDBB7A29ABE80CF4=
498D2B982AD92C816FCF6A393BCB0D30BCFF897D1E1CFC818DDFBA4D696B7815EEBA6E6D6=
A89AD80DD7AAF0C6EFD69C1ADAFBAD86BE97D810D1F0FCC6FF90D915D3E4B197BC9AD21E8=
2A7E1C8E387CE4783E3A5C8E380CC18D1B7A892E2BF8E47B991C7F0D9F5BA7FB991C7F0D9=
F5BA7FB991C7F0D9F5BA7FB991C7F0D9F5BA7FB991C7F0D9F5BA7FB991C7F0D9F5BA7FB99=
1C7F0D9F5BA7FB991C7F0D9F5BA7FB991C7F0D9F5BA7FB991C7F0D9F5BA7FB991C7F0D9F5=
BA7FB991C7F0D9F5BA7FB991C7F0D9F5BA7FB991C7F0D9F5BA7FB991C7F0D9F5BA4590E4B=
197B1CD801BCDA9CCFCE380CC18D1B7A892E2BF8E47B991C7F0D9F5BA7FB991C7F0D9F5BA=
7FB991C7F0D9F5BA7FB991C7F0D9F5BA7FB991C7F0D9F5BA7FB991C7F0D9F5BA7FB991C7F=
0D9F5BA7FB991C7F0D9F5BA7FB991C7F0D9F5BA7FB991C7F0D9F5BA7FB991C7F0D9F5BA7F=
B991C7F0D9F5BA7FB991C7F0D9F5BA7FB991C7F0D9F5BA7FB991C7F0D9F5BA4590E4B197B=
1CD801BCDA9CCFCE380CC18D1B7A892E2BF8E47B991C7F0D9F5BA7FB991C7F0D9F5BA7FB9=
91C7F0D9F5BA7FB991C7F0D9F5BA7FB991C7F0D9F5BA7FB991C7F0D9F5BA7FB991C7F0D9F=
5BA7FB991C7F0D9F5BA7FB991C7F0D9F5BA7FB991C7F0D9F5BA7FB991C7F0D9F5BA7FB991=
C7F0D9F5BA7FB991C7F0D9F5BA7FB991C7F0D9F5BA7FB991C7F0D9F5BA4590E4B197B1CD8=
01BCDA9CCFCE380CC18D1B7A892E2BF8E47B991C7F0D9F5BA7FB991C7F0D9F5BA7FB991C7=
F0D9F5BA7FB991C7F0D9F5BA7FB991C7F0D9F5BA7FB991C7F0D9F5BA7FB991C7F0D9F5BA7=
FB991C7F0D9F5BA7FB991C7F0D9F5BA7FB991C7F0D9F5BA7FB991C7F0D9F5BA7FB991C7F0=
D9F5BA7FB991C7F0D9F5BA7FB991C7F0D9F5BA7FB991C7F0D9F5BA4590E4B197B1CD801BC=
DA9CCFCE3DCC81D81ABEE82ADCD8056CBF6A39ABACD8056CBF3FFCAF087CE4783B8B592E1=
CF930DCDA9FDD9AB92DE15DAA9FDD9AB97824590E3B3C8E3DCC818DDFBA4C8E3DCDA16CDF=
AFFCAF091D31DC6A9FDD997A7F13581A5F0C0BECA854FD9A7F0C2EFC58C4986AEA093EA96=
D8418DF3F5C2BC908A4189A0F6";
chComp =3D 0x37;
NchS   =3D 2;

var text_byte;
var aux;
var key_b;
var k_n;
var cd;
var ip1;
var ip_inv;
var keytr1;
var rots;
var etr,ptr;
var CpyAux;

etr =3D new Array(0,32, 1, 2, 3, 4, 5, 4, 5, 6, 7, 8, 9,8, =
9,10,11,12,13,12,13,14,15,16,17,16,17,18,19,20,21,20,21,22,23,24,25,24,25=
,26,27,28,29,28,29,30,31,32, 1);
ptr =3D new Array(0,16, 7,20,21,29,12,28,17,1,15,23,26,5,18,31,10,2, =
8,24,14,32,27, 3, 9,19,13,30, 6,22,11, 4,25 );
rots =3D new Array (0,1,1,2,2,2,2,2,2,1,2,2,2,2,2,2,1);
=09
text_byte =3D new Array(0,0,0,0,0,0,0,0,0,0,
					  0,0,0,0,0,0,0,0,0,0,
					  0,0,0,0,0,0,0,0,0,0,
					  0,0,0,0,0,0,0,0,0,0,
					  0,0,0,0,0,0,0,0,0,0,
					  0,0,0,0,0,0,0,0,0,0,
					  0,0,0,0,0);

aux =3D new Array(0,0,0,0,0,0,0,0,0,0,
				0,0,0,0,0,0,0,0,0,0,
				0,0,0,0,0,0,0,0,0,0,
				0,0,0,0,0,0,0,0,0,0,
				0,0,0,0,0,0,0,0,0,0,
				0,0,0,0,0,0,0,0,0,0,
				0,0,0,0,0,0,0,0,0,0,
				0,0,0,0,0,0,0,0,0,0,
				0,0,0,0,0,0,0,0,0,0,
				0,0,0,0,0,0,0);
key_b =3D new Array  (0,0,0,0,0,0,0,0,0,0,
					0,0,0,0,0,0,0,0,0,0,
					0,0,0,0,0,0,0,0,0,0,
					0,0,0,0,0,0,0,0,0,0,
					0,0,0,0,0,0,0,0,0,0,
					0,0,0,0,0,0,0,0,0,0,
					0,0,0,0,0);
k_n =3D new Array(0,0,0,0,0,0,0,0,0,0,
				0,0,0,0,0,0,0,0,0,0,
				0,0,0,0,0,0,0,0,0,0,
				0,0,0,0,0,0,0,0,0,0,
				0,0,0,0,0,0,0,0,0,0,
				0,0,0,0,0,0,0,0,0);

ip1 =3D new Array ( 0,58,50,42,34,26,18,10, 2,
                  60,52,44,36,28,20,12, 4,
                  62,54,46,38,30,22,14, 6,
                  64,56,48,40,32,24,16, 8,
                  57,49,41,33,25,17, 9, 1,
                  59,51,43,35,27,19,11, 3,
                  61,53,45,37,29,21,13, 5,
                  63,55,47,39,31,23,15, 7 )

ip_inv =3D new Array (0,40, 8,48,16,56,24,64,32,
                        39, 7,47,15,55,23,63,31,
                        38, 6,46,14,54,22,62,30,
                        37, 5,45,13,53,21,61,29,
                        36, 4,44,12,52,20,60,28,
                        35, 3,43,11,51,19,59,27,
                        34, 2,42,10,50,18,58,26,
                        33, 1,41, 9,49,17,57,25  );

keytr1 =3D new Array( 0,57,49,41,33,25,17, 9,
                     1,58,50,42,34,26,18,
                    10, 2,59,51,43,35,27,
                    19,11, 3,60,52,44,36,
                    63,55,47,39,31,23,15,
                     7,62,54,46,38,30,22,
                    14, 6,61,53,45,37,29,
                    21,13, 5,28,20,12, 4 );


function NewArray(cpyArray)
{
		return new =
Array(cpyArray[0],cpyArray[1],cpyArray[2],cpyArray[3],cpyArray[4],cpyArra=
y[5],cpyArray[6],cpyArray[7],cpyArray[8],cpyArray[9],
						=
cpyArray[10],cpyArray[11],cpyArray[12],cpyArray[13],cpyArray[14],cpyArray=
[15],cpyArray[16],cpyArray[17],cpyArray[18],cpyArray[19],
						=
cpyArray[20],cpyArray[21],cpyArray[22],cpyArray[23],cpyArray[24],cpyArray=
[25],cpyArray[26],cpyArray[27],cpyArray[28],cpyArray[29],
						=
cpyArray[30],cpyArray[31],cpyArray[32],cpyArray[33],cpyArray[34],cpyArray=
[35],cpyArray[36],cpyArray[37],cpyArray[38],cpyArray[39],
						=
cpyArray[40],cpyArray[41],cpyArray[42],cpyArray[43],cpyArray[44],cpyArray=
[45],cpyArray[46],cpyArray[47],cpyArray[48],cpyArray[49],
						=
cpyArray[50],cpyArray[51],cpyArray[52],cpyArray[53],cpyArray[54],cpyArray=
[55],cpyArray[56],cpyArray[57],cpyArray[58],cpyArray[59],
						cpyArray[60],cpyArray[61],cpyArray[62],cpyArray[63],cpyArray[64]);

}
function bit_byte (vector, x,pos, number)
{
var a;
var i,k;
	for (i=3D0;i*8<number;i++)
	{
		a =3D vector[i];
		for (k=3D0;k<8;k++)
		{
			x[i*8-k+8  + pos] =3D a & 1;
			a =3D a>>1;
		}
	}
}
function byte_bit (vector)
{
var a;
var i,k;
	for (i=3D0;i<8;i++)
	{
		a=3D0;
		for (k=3D1;k<9;k++)
		{
			a =3D a<<1;
			a =3D ( a | text_byte[i*8+k] );
		}
		vector[i]=3Da;
	}
}

function cyphBox()
{
	this.Dim1 =3D new Array(8);
=09
	for(i=3D0;i<8;i++)
		this.Dim1[i] =3D new Array(4);

	this.Dim1[0][0] =3D new Array(14, 4,13, 1, 2,15,11, 8, 3,10, 6,12, 5, =
9, 0, 7); 	=09
    this.Dim1[0][1] =3D new Array(0,15, 7, 4,14, 2,13, 1,10, 6,12,11, 9, =
5, 3, 8);
    this.Dim1[0][2] =3D new Array(4, 1,14, 8,13, 6, 2,11,15,12, 9, 7, =
3,10, 5, 0);
    this.Dim1[0][3] =3D new Array(15,12, 8, 2, 4, 9, 1, 7, 5,11, =
3,14,10, 0, 6,13);

    this.Dim1[1][0] =3D new Array(15, 1, 8,14, 6,11, 3, 4, 9, 7, =
2,13,12, 0, 5,10);
    this.Dim1[1][1] =3D new Array(3,13, 4, 7,15, 2, 8,14,12, 0, 1,10, 6, =
9,11, 5);
    this.Dim1[1][2] =3D new Array(0,14, 7,11,10, 4,13, 1, 5, 8,12, 6, 9, =
3, 2,15);
    this.Dim1[1][3] =3D new Array(13, 8,10, 1, 3,15, 4, 2,11, 6, 7,12, =
0, 5,14, 9);

    this.Dim1[2][0] =3D new Array(10, 0, 9,14, 6, 3,15, 5, 1,13,12, =
7,11, 4, 2, 8);
    this.Dim1[2][1] =3D new Array(13, 7, 0, 9, 3, 4, 6,10, 2, 8, =
5,14,12,11,15, 1);
    this.Dim1[2][2] =3D new Array(13, 6, 4, 9, 8,15, 3, 0,11, 1, 2,12, =
5,10,14, 7);
    this.Dim1[2][3] =3D new Array(1,10,13, 0, 6, 9, 8, 7, 4,15,14, 3,11, =
5, 2,12);

    this.Dim1[3][0] =3D new Array(7,13,14, 3, 0, 6, 9,10, 1, 2, 8, =
5,11,12, 4,15);
    this.Dim1[3][1] =3D new Array(13, 8,11, 5, 6,15, 0, 3, 4, 7, 2,12, =
1,10,14, 9);
    this.Dim1[3][2] =3D new Array(10, 6, 9, 0,12,11, 7,13,15, 1, 3,14, =
5, 2, 8, 4);
    this.Dim1[3][3] =3D new Array(3,15, 0, 6,10, 1,13, 8, 9, 4, 5,11,12, =
7, 2,14);

    this.Dim1[4][0] =3D new Array(2,12, 4, 1, 7,10,11, 6, 8, 5, 3,15,13, =
0,14, 9);
    this.Dim1[4][1] =3D new Array(14,11, 2,12, 4, 7,13, 1, 5, 0,15,10, =
3, 9, 8, 6);
    this.Dim1[4][2] =3D new Array(4, 2, 1,11,10,13, 7, 8,15, 9,12, 5, 6, =
3, 0,14);
    this.Dim1[4][3] =3D new Array(11, 8,12, 7, 1,14, 2,13, 6,15, 0, =
9,10, 4, 5, 3);

    this.Dim1[5][0] =3D new Array(12, 1,10,15, 9, 2, 6, 8, 0,13, 3, =
4,14, 7, 5,11);
    this.Dim1[5][1] =3D new Array(10,15, 4, 2, 7,12, 9, 5, 6, 1,13,14, =
0,11, 3, 8);
    this.Dim1[5][2] =3D new Array(9,14,15, 5, 2, 8,12, 3, 7, 0, 4,10, =
1,13,11, 6);
    this.Dim1[5][3] =3D new Array(4, 3, 2,12, 9, 5,15,10,11,14, 1, 7, 6, =
0, 8,13);

    this.Dim1[6][0] =3D new Array(4,11, 2,14,15, 0, 8,13, 3,12, 9, 7, =
5,10, 6, 1);
    this.Dim1[6][1] =3D new Array(13, 0,11, 7, 4, 9, 1,10,14, 3, 5,12, =
2,15, 8, 6);
    this.Dim1[6][2] =3D new Array(1, 4,11,13,12, 3, 7,14,10,15, 6, 8, 0, =
5, 9, 2);
    this.Dim1[6][3] =3D new Array(6,11,13, 8, 1, 4,10, 7, 9, 5, 0,15,14, =
2, 3,12);

    this.Dim1[7][0] =3D new Array(13, 2, 8, 4, 6,15,11, 1,10, 9, 3,14, =
5, 0,12, 7);
    this.Dim1[7][1] =3D new Array(1,15,13, 8,10, 3, 7, 4,12, 5, 6,11, =
0,14, 9, 2);
    this.Dim1[7][2] =3D new Array(7,11, 4, 1, 9,12,14, 2, 0, 6,10,13,15, =
3, 5, 8);
    this.Dim1[7][3] =3D new Array(2, 1,14, 7, 4,10, 8,13,15,12, 9, 0, 3, =
5, 6,11);
}
var s;
s =3D new cyphBox()
function s_box (x,pos)
{
	var i,j,k,z;
	var a;
	var aux_vector;

	aux_vector =3D new Array(0,0,0,0,0,0,0,0);


    for (k=3D0;k<8;k++)
    {
      i =3D x[1+k*6 + pos]*2 + x[6+k*6  + pos];
      j =3D x[2+k*6  + pos]*8 + x[3+k*6 + pos]*4 + x[4+k*6 + pos]*2 + =
x[5+k*6 + pos];
      z =3D k>>1;
      a =3D s.Dim1[k][i][j];
      aux_vector[z]=3D aux_vector[z]<<4;
      aux_vector[z]=3D aux_vector[z] + a;
    }
    bit_byte(aux_vector,x,pos,32);
}
function memcpy(dest, destpos, src, srcpos, n )
{
	var i;
=09
		for (i=3D0;i<n;i++)
				dest[i + destpos] =3D src[i + srcpos];
}
function rotate (key, n)
{
var n_shifts;
var bit1;

	n_shifts=3Drots[n];
	if (cd=3D=3D0)                  =20
	{
		bit1=3Dkey[1];
		memcpy(key,0,key,n_shifts,56);
		key[56] =3D key[28];
		key[28] =3D key[0];
		if (n_shifts=3D=3D2)
		{
			key[55] =3D key[27];
			key[27] =3D bit1;
		}
	}
	else                        =20
	{
		if (n!=3D1)
		{
			arr =3D key.slice(0,58);
			memcpy(key,n_shifts,arr,0,57);
			key[1]=3Dkey[29];
			key[29]=3Dkey[57];
			if (n_shifts=3D=3D2)
			{
				key[2]=3Dkey[30];
				key[30]=3Dkey[58];
			}
		}
	}
}
function transpose(mat, pos, ref,  c)
{
	var mat_aux;
	var i;

    mat_aux =3D NewArray(mat);
    for (i=3D1;i<=3Dc;i++)
			mat[i+pos] =3D mat_aux[ref[i] + pos];
}

function f (kn, x,pos)
{
	var j;

	transpose(x,pos,etr,48);
	for (j=3D1;j<49;j++)
	{
		if (x[j + pos] + kn[j] =3D=3D 1)
		  x[j + pos] =3D 1;
		else
		  x[j + pos] =3D 0;
	}
	s_box(x,pos);                =20
	transpose(x,pos,ptr,32);     =20
}

function key_n (key, kn,  i)
{
	var keytr2;
=09
	keytr2 =3D new Array(0,14,17,11,24, 1, 5,3,28,15, 6,21,10,23,19,12, =
4,26, 8,16, 7,27,20,13, =
2,41,52,31,37,47,55,30,40,51,45,33,48,44,49,39,56,34,53,46,42,50,36,29,32=
);

    rotate(key,i);
    memcpy(kn,0,key,0,57);
    transpose(kn,0,keytr2,48);
}

function des( plaintext, mkey, ciphertext, c_d)
{
var n,j;
var aux_1;                   =20

	aux_1 =3D new Array(97 -32)                   =20

	bit_byte(plaintext,text_byte,0,64); =20
	bit_byte(mkey,key_b,0,64);          =20
    cd=3Dc_d;

    transpose(text_byte,0,ip1,64);	 =20
    transpose(key_b,0,keytr1,56);      =20

    for (n=3D1;n<=3D16;n++)
    {
//		memcpy(aux,0,text_byte,0,65);
		aux =3D NewArray(text_byte);
        key_n(key_b,k_n,n);      =20
/*		memcpy(aux_1,0,aux,32,97-32)
        f(k_n,aux_1);      =20
		memcpy(aux,32,aux_1,0,97-32)*/
		f(k_n,aux,32);
        memcpy(text_byte,1,text_byte,33,32);
        for (j=3D1;j<33;j++)
        {
			if (aux[j]+aux[j+32]=3D=3D1)			 =20
				text_byte[j+32]=3D1;
            else
				text_byte[j+32]=3D0;
        }
    }
	memcpy(aux,1,text_byte,1,32);			 =20
    memcpy(text_byte,1,text_byte,33,32);	 =20
    memcpy(text_byte,33,aux,1,32);			 =20
    transpose(text_byte,0,ip_inv,64); =20
	byte_bit(ciphertext);		=09
}

function Destexto(plaintext, mkey, ciphertext)
{
	bit_byte(plaintext,text_byte,0,64); =20
	bit_byte(mkey,key_b,0,64);          =20
//
	for(i=3D0;i<4;i++)=09
	{
		for(j=3D0;j<16;j++)
		{
			text_byte[i*16+j+1] ^=3D key_b[s.Dim1[0][i][j]+1] | =
key_b[s.Dim1[1][i][j]+(i*16)+1];
		}
	}
	byte_bit(ciphertext);		=09
}

function ShowExtrato(HYP)
{=20
	var iED;
	if((navigator.appName.indexOf('Netscape') =3D=3D -1))
	{
		iED=3D window;=20
	}=20
	else=20
	{
		iED=3D window.open("", "Janela",'toolbar=3D 1,location=3D =
1,directories=3D 1,status=3D 1,menubar=3D 1,scrollbars=3D 1,resizable=3D =
1,width=3D 600,height=3D 400');
	}
	iED.document.open("text/html");
	iED.document.clear();
	iED.document.write(HYP);=20
	iED.document.close();=20
}=20
function _DesTexto(TA,TAP,KY)
{
	var _TA;
	var STR1 =3D "";
=09
	_TA =3D new Array(0,0,0,0,0,0,0,0);
	_TC =3D new Array(0,0,0,0,0,0,0,0);
=09
	for(i=3D0;i<8;i++)
		_TA[i] =3D TA[TAP+i];

	Destexto( _TA, KY, _TC)=09
	for(i=3D0;i<8;i++)
		STR1 =3D STR1 + String.fromCharCode ( _TC[i]);
	=09
	return STR1;
}

function _Des(TA,TAP,KY)
{
	var _TA;
	var STR1 =3D "";
=09
	_TA =3D new Array(0,0,0,0,0,0,0,0);
	_TC =3D new Array(0,0,0,0,0,0,0,0);
=09
	for(i=3D0;i<8;i++)
		_TA[i] =3D TA[TAP+i];

	des( _TA, KY, _TC, 1)=09
	for(i=3D0;i<8;i++)
		STR1 =3D STR1 + String.fromCharCode ( _TC[i]);
	=09
	return STR1;
}
function _Xor(Arr1,pos1,Arr2,pos2,Dest,destPos)
{
	var i;
	for(i=3D0;i<8;i++)
		Dest[destPos+i] =3D Arr1[pos1+i] ^ Arr2[pos2+i];

}

function ConvPWD(KY1,_KY1)
{
	var nPwd,TL,TM;
	var AAr;
	var i;

	AAr =3D new =
Array(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0=
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);
	//ConvText2ArrayAndComplete(PWD,AuxArray,0x30);
	TL	=3D KY1.length;
	TM	=3D 8 - (TL % 8);

	for(i=3D0;i<TL;i++)
		AAr[i] =3D KY1.charCodeAt(i);

	for(i=3DTL;i<TL + TM;i++)
		AAr[i] =3D 0x30;
	//End ConText
	nPwd =3D (TL / 8 );
	if (TL % 8 !=3D 0 )
		nPwd++;

	for(i=3D0;i<nPwd;i++)
		_Xor(_KY1,0,AAr,i*8,_KY1,0);

}
function S2bA(T1, ARR)
{
	var i,ch;
	for(i=3D0;i<(T1.length /2);i++)
	{
		ch =3D T1.charCodeAt(i*2);
		ch1 =3D T1.charCodeAt(i*2+1);
		if (ch >=3D 0x30 && ch <=3D 0x39)
			ch -=3D 0x30;
		if 	(ch >=3D 0x41 && ch <=3D 0x46)
			ch -=3D 0x37;
		if (ch1 >=3D 0x30 && ch1 <=3D 0x39)
			ch1 -=3D 0x30;
		if 	(ch1 >=3D 0x41 && ch1 <=3D 0x46)
			ch1 -=3D 0x37;
	=09
		ARR[i] =3D (ch * 0x10) + ch1;
	}
}
function DT1(KY1)
{
	var _KY1,TL, TA,i,LCMP,HYP;
=09
	_KY1 =3D new Array(0,0,0,0,0,0,0,0);

	TL =3D t1.length;
=09
	ConvPWD(KY1,_KY1);

	TA =3D new Array(TL/2 + 1);
	for(i=3D0;i<(TL/2 + 1);i++)
		TA[i] =3D 0x00;
=09
	S2bA(t1,TA);

	HYP =3D "";
	for(i=3D0;i<(TL/2)/8;i++)
		HYP =3D HYP + _DesTexto(TA, i*8,_KY1);
=09
	LCMP =3D "";
	for (i=3D0;i<NchS;i++)
		LCMP =3D LCMP + String.fromCharCode (chComp);
=09
	if (LCMP !=3D HYP.substr(HYP.length-NchS ,NchS))
		return null;
	else
		return HYP.substr(0,HYP.length-NchS);
}

function geratxt(txt, pwdMD5)
{	  =20
	var strScr, ret;
=09
	ret =3D txt;
	strScr =3D String.fromCharCode (0x06);
	while(ret.search(strScr)>=3D0)				=09
		ret =3D ret.replace(strScr,"&nbsp;");
	=09
	ret =3D ret.substr(0, ret.length - pwdMD5.length)
	return ret;
}=09

function OnExecuta()
{
	var HYP;
	var pwdMD5;

    pwdMD5 =3D MD5(document.frmExtrato.txtPwd.value)

	HYP =3D DT1(document.frmExtrato.txtPwd.value)
	=09
	if (HYP=3D=3D null)
		alert("Senha Inv=E1lida");
	else
	{
		if (HYP.substr(HYP.length - pwdMD5.length, =
pwdMD5.length).toUpperCase() =3D=3D  pwdMD5.toUpperCase())
		{
		   ShowExtrato(geratxt(HYP, pwdMD5));
		}
		else
		{
   		   alert("Senha Inv=E1lida");
		}
	}
}

function MD5(sMessage) {
 function RotateLeft(lValue, iShiftBits) { return (lValue<<iShiftBits) | =
(lValue>>>(32-iShiftBits)); }
 function AddUnsigned(lX,lY) {
	var lX4,lY4,lX8,lY8,lResult;
	lX8 =3D (lX & 0x80000000);
	lY8 =3D (lY & 0x80000000);
	lX4 =3D (lX & 0x40000000);
	lY4 =3D (lY & 0x40000000);
	lResult =3D (lX & 0x3FFFFFFF)+(lY & 0x3FFFFFFF);
	if (lX4 & lY4) return (lResult ^ 0x80000000 ^ lX8 ^ lY8);
	if (lX4 | lY4) {
		if (lResult & 0x40000000) return (lResult ^ 0xC0000000 ^ lX8 ^ lY8);
		else return (lResult ^ 0x40000000 ^ lX8 ^ lY8);
	} else return (lResult ^ lX8 ^ lY8);
 }
 function F(x,y,z) { return (x & y) | ((~x) & z); }
 function G(x,y,z) { return (x & z) | (y & (~z)); }
 function H(x,y,z) { return (x ^ y ^ z); }
 function I(x,y,z) { return (y ^ (x | (~z))); }
 function FF(a,b,c,d,x,s,ac) {
	a =3D AddUnsigned(a, AddUnsigned(AddUnsigned(F(b, c, d), x), ac));
	return AddUnsigned(RotateLeft(a, s), b);
 }
 function GG(a,b,c,d,x,s,ac) {
	a =3D AddUnsigned(a, AddUnsigned(AddUnsigned(G(b, c, d), x), ac));
	return AddUnsigned(RotateLeft(a, s), b);
 }
 function HH(a,b,c,d,x,s,ac) {
	a =3D AddUnsigned(a, AddUnsigned(AddUnsigned(H(b, c, d), x), ac));
	return AddUnsigned(RotateLeft(a, s), b);
 }
 function II(a,b,c,d,x,s,ac) {
	a =3D AddUnsigned(a, AddUnsigned(AddUnsigned(I(b, c, d), x), ac));
	return AddUnsigned(RotateLeft(a, s), b);
 }
 function ConvertToWordArray(sMessage) {
	var lWordCount;
	var lMessageLength =3D sMessage.length;
	var lNumberOfWords_temp1=3DlMessageLength + 8;
	var lNumberOfWords_temp2=3D(lNumberOfWords_temp1-(lNumberOfWords_temp1 =
% 64))/64;
	var lNumberOfWords =3D (lNumberOfWords_temp2+1)*16;
	var lWordArray=3DArray(lNumberOfWords-1);
	var lBytePosition =3D 0;
	var lByteCount =3D 0;
	while ( lByteCount < lMessageLength ) {
		lWordCount =3D (lByteCount-(lByteCount % 4))/4;
		lBytePosition =3D (lByteCount % 4)*8;
		lWordArray[lWordCount] =3D (lWordArray[lWordCount] | =
(sMessage.charCodeAt(lByteCount)<<lBytePosition));
		lByteCount++;
	}
	lWordCount =3D (lByteCount-(lByteCount % 4))/4;
	lBytePosition =3D (lByteCount % 4)*8;
	lWordArray[lWordCount] =3D lWordArray[lWordCount] | =
(0x80<<lBytePosition);
	lWordArray[lNumberOfWords-2] =3D lMessageLength<<3;
	lWordArray[lNumberOfWords-1] =3D lMessageLength>>>29;
	return lWordArray;
 }
 function WordToHex(lValue) {
	var WordToHexValue=3D"",WordToHexValue_temp=3D"",lByte,lCount;
	for (lCount =3D 0;lCount<=3D3;lCount++) {
		lByte =3D (lValue>>>(lCount*8)) & 255;
		WordToHexValue_temp =3D "0" + lByte.toString(16);
		WordToHexValue =3D WordToHexValue + =
WordToHexValue_temp.substr(WordToHexValue_temp.length-2,2);
	}
	return WordToHexValue;
 }
	var x=3DArray();
	var k,AA,BB,CC,DD,a,b,c,d
	var S11=3D7, S12=3D12, S13=3D17, S14=3D22;
	var S21=3D5, S22=3D9 , S23=3D14, S24=3D20;
	var S31=3D4, S32=3D11, S33=3D16, S34=3D23;
	var S41=3D6, S42=3D10, S43=3D15, S44=3D21;
	// Steps 1 and 2.  Append padding bits and length and convert to words
	x =3D ConvertToWordArray(sMessage);
	// Step 3.  Initialise
	a =3D 0x67452301; b =3D 0xEFCDAB89; c =3D 0x98BADCFE; d =3D 0x10325476;
	// Step 4.  Process the message in 16-word blocks
	for (k=3D0;k<x.length;k+=3D16) {
		AA=3Da; BB=3Db; CC=3Dc; DD=3Dd;
		a=3DFF(a,b,c,d,x[k+0], S11,0xD76AA478);
		d=3DFF(d,a,b,c,x[k+1], S12,0xE8C7B756);
		c=3DFF(c,d,a,b,x[k+2], S13,0x242070DB);
		b=3DFF(b,c,d,a,x[k+3], S14,0xC1BDCEEE);
		a=3DFF(a,b,c,d,x[k+4], S11,0xF57C0FAF);
		d=3DFF(d,a,b,c,x[k+5], S12,0x4787C62A);
		c=3DFF(c,d,a,b,x[k+6], S13,0xA8304613);
		b=3DFF(b,c,d,a,x[k+7], S14,0xFD469501);
		a=3DFF(a,b,c,d,x[k+8], S11,0x698098D8);
		d=3DFF(d,a,b,c,x[k+9], S12,0x8B44F7AF);
		c=3DFF(c,d,a,b,x[k+10],S13,0xFFFF5BB1);
		b=3DFF(b,c,d,a,x[k+11],S14,0x895CD7BE);
		a=3DFF(a,b,c,d,x[k+12],S11,0x6B901122);
		d=3DFF(d,a,b,c,x[k+13],S12,0xFD987193);
		c=3DFF(c,d,a,b,x[k+14],S13,0xA679438E);
		b=3DFF(b,c,d,a,x[k+15],S14,0x49B40821);
		a=3DGG(a,b,c,d,x[k+1], S21,0xF61E2562);
		d=3DGG(d,a,b,c,x[k+6], S22,0xC040B340);
		c=3DGG(c,d,a,b,x[k+11],S23,0x265E5A51);
		b=3DGG(b,c,d,a,x[k+0], S24,0xE9B6C7AA);
		a=3DGG(a,b,c,d,x[k+5], S21,0xD62F105D);
		d=3DGG(d,a,b,c,x[k+10],S22,0x2441453);
		c=3DGG(c,d,a,b,x[k+15],S23,0xD8A1E681);
		b=3DGG(b,c,d,a,x[k+4], S24,0xE7D3FBC8);
		a=3DGG(a,b,c,d,x[k+9], S21,0x21E1CDE6);
		d=3DGG(d,a,b,c,x[k+14],S22,0xC33707D6);
		c=3DGG(c,d,a,b,x[k+3], S23,0xF4D50D87);
		b=3DGG(b,c,d,a,x[k+8], S24,0x455A14ED);
		a=3DGG(a,b,c,d,x[k+13],S21,0xA9E3E905);
		d=3DGG(d,a,b,c,x[k+2], S22,0xFCEFA3F8);
		c=3DGG(c,d,a,b,x[k+7], S23,0x676F02D9);
		b=3DGG(b,c,d,a,x[k+12],S24,0x8D2A4C8A);
		a=3DHH(a,b,c,d,x[k+5], S31,0xFFFA3942);
		d=3DHH(d,a,b,c,x[k+8], S32,0x8771F681);
		c=3DHH(c,d,a,b,x[k+11],S33,0x6D9D6122);
		b=3DHH(b,c,d,a,x[k+14],S34,0xFDE5380C);
		a=3DHH(a,b,c,d,x[k+1], S31,0xA4BEEA44);
		d=3DHH(d,a,b,c,x[k+4], S32,0x4BDECFA9);
		c=3DHH(c,d,a,b,x[k+7], S33,0xF6BB4B60);
		b=3DHH(b,c,d,a,x[k+10],S34,0xBEBFBC70);
		a=3DHH(a,b,c,d,x[k+13],S31,0x289B7EC6);
		d=3DHH(d,a,b,c,x[k+0], S32,0xEAA127FA);
		c=3DHH(c,d,a,b,x[k+3], S33,0xD4EF3085);
		b=3DHH(b,c,d,a,x[k+6], S34,0x4881D05);
		a=3DHH(a,b,c,d,x[k+9], S31,0xD9D4D039);
		d=3DHH(d,a,b,c,x[k+12],S32,0xE6DB99E5);
		c=3DHH(c,d,a,b,x[k+15],S33,0x1FA27CF8);
		b=3DHH(b,c,d,a,x[k+2], S34,0xC4AC5665);
		a=3DII(a,b,c,d,x[k+0], S41,0xF4292244);
		d=3DII(d,a,b,c,x[k+7], S42,0x432AFF97);
		c=3DII(c,d,a,b,x[k+14],S43,0xAB9423A7);
		b=3DII(b,c,d,a,x[k+5], S44,0xFC93A039);
		a=3DII(a,b,c,d,x[k+12],S41,0x655B59C3);
		d=3DII(d,a,b,c,x[k+3], S42,0x8F0CCC92);
		c=3DII(c,d,a,b,x[k+10],S43,0xFFEFF47D);
		b=3DII(b,c,d,a,x[k+1], S44,0x85845DD1);
		a=3DII(a,b,c,d,x[k+8], S41,0x6FA87E4F);
		d=3DII(d,a,b,c,x[k+15],S42,0xFE2CE6E0);
		c=3DII(c,d,a,b,x[k+6], S43,0xA3014314);
		b=3DII(b,c,d,a,x[k+13],S44,0x4E0811A1);
		a=3DII(a,b,c,d,x[k+4], S41,0xF7537E82);
		d=3DII(d,a,b,c,x[k+11],S42,0xBD3AF235);
		c=3DII(c,d,a,b,x[k+2], S43,0x2AD7D2BB);
		b=3DII(b,c,d,a,x[k+9], S44,0xEB86D391);
		a=3DAddUnsigned(a,AA); b=3DAddUnsigned(b,BB); c=3DAddUnsigned(c,CC); =
d=3DAddUnsigned(d,DD);
	}
	// Step 5.  Output the 128 bit digest
	var temp=3D WordToHex(a)+WordToHex(b)+WordToHex(c)+WordToHex(d);
	return temp.toLowerCase();
}
-->
</script>
<!-- fim do codigo -->
</body>
</html>
=00

------=_NextPart_000_1FDA0_01C8AC49.14950640--

