unit Umontacdspais;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, StdCtrls, JvComponentBase, JvCSVBaseControls, DB, Grids, DBGrids,
  DBClient;

type
  TForm2 = class(TForm)
    JvCSVBase1: TJvCSVBase;
    Button1: TButton;
    cds: TClientDataSet;
    DataSource1: TDataSource;
    DBGrid1: TDBGrid;
    cdsIPNUMFROM: TLargeintField;
    cdsIPNUMTO: TLargeintField;
    cdssigla: TWideStringField;
    cdsmpais: TWideStringField;
    cdsID: TAutoIncField;
    procedure JvCSVBase1CursorChanged(Sender: TObject; NameValues: TStrings;
      FieldCount: Integer);
    procedure Button1Click(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Form2: TForm2;
  parar : boolean;

implementation

{$R *.dfm}

procedure TForm2.Button1Click(Sender: TObject);
begin

cds.Open;
JvCSVBase1.RecordFirst;


while not parar do
begin
JvCSVBase1.RecordNext;
end;

cds.close;
showmessage('Terminou');



end;

procedure TForm2.JvCSVBase1CursorChanged(Sender: TObject; NameValues: TStrings;
  FieldCount: Integer);
var
SIPFrom, SIPTO, SPais, SSigla : string;
IPFROM,IPTO : Largeint;


begin

SIPFROM :=  NameValues.Values['IPFROM'];
SIPTO   :=  NameValues.Values['IPTO'];
SPAIS   :=  NameValues.Values['PAIS'];
SSIGLA  := NameValues.Values['CTRY'];


if trim(SIPFROM) = '' then
   begin

   parar := true;
   exit;
   end;




try
IPFrom := strtoint(SIPFROM);
IPTo := strtoint(SIPTo);
except
showmessage('Pau no IP');
exit;
end;



if not cds.Locate('IPNUMFROM;IPNUMTO',vararrayof([IPFROM,IPTO]),[]) then
   begin
   cds.Append;
   cdsIPNUMFROM.AsLargeInt := IPFROM;
   cdsIPNUMTO.AsLargeInt   := IPTO;
   cdssigla.AsString       := SSIGLA;
   cdsmpais.AsString       := SPAIS;
   cds.Post;
   end;






end;

end.
