unit UDM_DNS;

interface

uses
  SysUtils, Classes, DB, DBAccess, MyAccess, MemDS, UCriaObjetos,IdMessage,
  IdDNSResolver, JvExControls, JvComCtrls, ABSMain;

type
  TDM_DNS = class(TDataModule)
    qdns: TABSQuery;
    qdnsID: TIntegerField;
    qdnsName: TWideStringField;
    qdnsdns: TWideStringField;
    qdnsactive: TIntegerField;
  private


    { Private declarations }
  public
  Function GravaIPSpam(IP:String;IPDec:largeInt):Boolean;
  Function Filtrar_DNS(Mens:TMSG):TMSG;
    { Public declarations }
  end;

var
  DM_DNS: TDM_DNS;

implementation

uses UDMServer;



Function TDM_DNS.GravaIPSpam(IP:String;IPDec:largeInt):Boolean;
 begin
 {
 if qipSpam.active then qipSpam.Active := false;
 qipspam.Params[0].AsLargeInt := IPDEc;
 qipSpam.active := true;
 if qipspam.RecordCount > 0 then
    begin
      qipspam.Edit;
      qIPSpamQTD.AsInteger :=  qIPSpamQTD.AsInteger + 1;
      qipSpam.Post;
      qipspam.ApplyUpdates;
    end
    else
    begin
      qipspam.Append;
      qIPSpamIPDecimal.AsLargeInt := IPDec;
      qIPSpamIP.AsString         := IP;
      qIPSpamQTD.AsInteger       := 1;
      qipSpam.Post;
      qipSpam.ApplyUpdates;

    end;


  }
 end;


Function TDM_DNS.Filtrar_DNS(Mens:TMSG):TMSG;
var
DNS     : TIdDNSResolver;
EIP     : TJvIPAddress;
Monta   : String;
Achou   : Boolean;
ErroDNS : Boolean;
I       : Integer;
qdnsT   : TABSQuery;

begin

qdnsT := TABSQuery.Create(nil);
qdnsT.SQL.Text       := 'SELECT dns.ID,  dns.Name,  dns.dns,  dns.active FROM  dns';
qdnsT.Databasename   := dm_server.Cone_IPSpam.DatabaseName;
qdnsT.SessionName    := dm_server.SessaoSetup.SessionName;


qdnsT.active := true;
qdnsT.first;


result := Mens;


EIP         :=  TJvIPAddress.Create(nil);
DNS         :=  TIdDNSResolver.Create(nil);

DNS.Host    :=  DM_Server.IPDns;
DNS.WaitingTime := 200;
DNS.QueryType := [qtA];
DNS.AllowRecursiveQueries := true;
DNS.Port      := 53;

EIP.ClearAddress;
EIP.Text := Mens.IPSender;
EIP.Update;


monta := inttostr(EIP.AddressValues.Value4)+'.'+inttostr(EIP.AddressValues.Value3)+'.'+inttostr(EIP.AddressValues.Value2)+'.'+inttostr(EIP.AddressValues.Value1);


achou := false;

with DM_DNS do
begin


 while (not qdnsT.Eof) and (Mens.Filtrada <> 145) do
 begin

 if achou then break;

 errodns := false;

 if qdnsT.FieldByName('active').AsInteger = 1 then
  begin
  try
   DNS.Resolve(monta+'.'+qdns.FieldByName('dns').asstring);//'relays.ordb.org');
   except
   errodns:= true;
  end;
        if not errodns then
        begin
          For I:=0 to DNS.QueryResult.Count - 1 do
             begin
                if DNS.QueryResult.Items[i] is TARecord then
                  begin
                    if TARecord(DNS.QueryResult.Items[i]).IPAddress = '127.0.0.2' then
                        begin
                         GravaIPSpam(Mens.IPSender,EIP.Address);
                         Mens.FiltroResultado.Add('SPAM IP:'+Mens.IPSender+' found in '+qdns.FieldByName('Name').AsString);
                         Mens.Filtrada     := 145;
                         Mens.Selecionada  := 1;
                         Result := Mens;
                         achou := true;
                         break;
                        end;
                  end;
             end;

        end;
    end;
  qdnsT.Next;
 end;
end;

try
DNS.Disconnect;
DNS.Free;
EIP.Free;
qdnsT.Free;
//DM_DNS.Free;
except
end;

end;


{$R *.dfm}

end.
